  
  [1X1 [33X[0;0YIntroduction[133X[101X
  
  
  [1X1.1 [33X[0;0YGetting started with RepnDecomp[133X[101X
  
  [33X[0;0YThis   package   allows   computations   of   various  decompositions  of  a
  representation   [23X\rho  :  G  \to  GL(V)[123X  where  [23XG[123X  is  finite  and  [23XV[123X  is  a
  finite-dimensional [23X\mathbb{C}[123X-vector space.[133X
  
  
  [1X1.1-1 [33X[0;0YInstallation[133X[101X
  
  [33X[0;0YTo  install  this  package,  refer  to  the installation instructions in the
  README    file    in    the    source    code.    It    is   located   here:
  [7Xhttps://github.com/gap-packages/RepnDecomp/blob/master/README.md[107X.[133X
  
  
  [1X1.1-2 [33X[0;0YNote on what is meant by a representation[133X[101X
  
  [33X[0;0YThroughout   this  documentation,  mathematical  terminology  is  used  e.g.
  representation.  It  is  clear  what  is meant mathematically, but it is not
  entirely  clear  what is meant in terms of GAP types - what are you supposed
  to  pass  in  when I say "pass in a representation". Occasionally I will not
  even  mention what we are passing in and assume the reader knows that [3Xrho[103X or
  [23X\rho[123X  refers  to a representation. A representation we can use is, in GAP, a
  homomorphism  from  a finite group to a matrix group where all matrices have
  coefficients  in  a  cyclotomic  field ([10XCyclotomics[110X is the union of all such
  fields in GAP). You can check whether something you want to pass is suitable
  with the function [2XIsFiniteGroupLinearRepresentation[102X ([14X4.1-1[114X).[133X
  
  [33X[0;0YHere's an example of a representation [3Xrho[103X in GAP:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XG := SymmetricGroup(3);[127X[104X
    [4X[28XSym( [ 1 .. 3 ] )[128X[104X
    [4X[25Xgap>[125X [27Ximages := List(GeneratorsOfGroup(G), g -> PermutationMat(g, 3));[127X[104X
    [4X[28X[ [ [ 0, 1, 0 ], [ 0, 0, 1 ], [ 1, 0, 0 ] ],[128X[104X
    [4X[28X  [ [ 0, 1, 0 ], [ 1, 0, 0 ], [ 0, 0, 1 ] ] ][128X[104X
    [4X[25Xgap>[125X [27Xrho := GroupHomomorphismByImages(G, Group(images));[127X[104X
    [4X[28X[ (1,2,3), (1,2) ] -> [ [ [ 0, 1, 0 ], [ 0, 0, 1 ], [ 1, 0, 0 ] ],[128X[104X
    [4X[28X  [ [ 0, 1, 0 ], [ 1, 0, 0 ], [ 0, 0, 1 ] ] ][128X[104X
  [4X[32X[104X
  
  
  [1X1.1-3 [33X[0;0YAPI Overview[133X[101X
  
  [33X[0;0YThe  algorithms  implemented  can be divided into two groups: methods due to
  Serre  from  his  book Linear Representations of Finite Groups, and original
  methods due to the authors of this package.[133X
  
  [33X[0;0YThe  default  is  to use the algorithms due to Serre. If you pass the option
  [10Xmethod  :=  "alternate"[110X  to  a  function,  it will use the alternate method.
  Passing  the  option  [10Xparallel[110X  will  try  to compute in parallel as much as
  possible. See the individual functions for options you can pass.[133X
  
  [33X[0;0YThe main functions implemented in this package are:[133X
  
  [33X[0;0YFor  decomposing  representations  into  canonical  and  irreducible  direct
  summands:[133X
  
  [30X    [33X[0;6Y[2XCanonicalDecomposition[102X ([14X5.3-1[114X)[133X
  
  [30X    [33X[0;6Y[2XIrreducibleDecomposition[102X ([14X5.3-2[114X)[133X
  
  [30X    [33X[0;6Y[2XIrreducibleDecompositionCollected[102X ([14X5.3-3[114X)[133X
  
  [33X[0;0YFor block diagonalising representations:[133X
  
  [30X    [33X[0;6Y[2XBlockDiagonalBasisOfRepresentation[102X ([14X5.1-1[114X)[133X
  
  [30X    [33X[0;6Y[2XBlockDiagonalRepresentation[102X ([14X5.1-2[114X)[133X
  
  [33X[0;0YFor computing centraliser rings:[133X
  
  [30X    [33X[0;6Y[2XCentralizerBlocksOfRepresentation[102X ([14X6.1-1[114X)[133X
  
  [30X    [33X[0;6Y[2XCentralizerOfRepresentation[102X ([14X6.1-2[114X)[133X
  
  [33X[0;0YFor  testing isomorphism and computing isomorphisms (intertwining operators)
  between representations:[133X
  
  [30X    [33X[0;6Y[2XLinearRepresentationIsomorphism[102X ([14X2.1-1[114X)[133X
  
  [30X    [33X[0;6Y[2XAreRepsIsomorphic[102X ([14X2.2-1[114X)[133X
  
  [30X    [33X[0;6Y[2XIsLinearRepresentationIsomorphism[102X ([14X2.2-2[114X)[133X
  
  [33X[0;0YFor   testing   unitarity   of  representations  and  the  unitarisation  of
  representations:[133X
  
  [30X    [33X[0;6Y[2XUnitaryRepresentation[102X ([14X3.1-1[114X)[133X
  
  [30X    [33X[0;6Y[2XIsUnitaryRepresentation[102X ([14X3.1-2[114X)[133X
  
